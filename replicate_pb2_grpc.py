# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import replicate_pb2 as replicate__pb2


class ReplicateStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.connect_master = channel.unary_unary(
        '/Replicate/connect_master',
        request_serializer=replicate__pb2.Request.SerializeToString,
        response_deserializer=replicate__pb2.Response.FromString,
        )
    self.store = channel.unary_unary(
        '/Replicate/store',
        request_serializer=replicate__pb2.Store_Request.SerializeToString,
        response_deserializer=replicate__pb2.Data.FromString,
        )


class ReplicateServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def connect_master(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def store(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ReplicateServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'connect_master': grpc.unary_unary_rpc_method_handler(
          servicer.connect_master,
          request_deserializer=replicate__pb2.Request.FromString,
          response_serializer=replicate__pb2.Response.SerializeToString,
      ),
      'store': grpc.unary_unary_rpc_method_handler(
          servicer.store,
          request_deserializer=replicate__pb2.Store_Request.FromString,
          response_serializer=replicate__pb2.Data.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Replicate', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
